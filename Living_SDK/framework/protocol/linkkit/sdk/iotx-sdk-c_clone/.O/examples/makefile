MODULE_NAME := examples
ALL_SUB_DIRS := components/tick_notify components/timer_service examples src/infra/log src/infra/system src/infra/utils src/protocol/alcs src/protocol/coap/cloud src/protocol/coap/local src/protocol/http src/protocol/http2 src/protocol/mqtt src/ref-impl/hal src/ref-impl/tls src/sdk-impl src/services/awss src/services/dev_bind src/services/dev_diagnosis src/services/http2_stream src/services/linkkit/cm src/services/linkkit/dev_reset src/services/linkkit/dm src/services/mdal/mal src/services/mdal/sal src/services/ota src/services/shadow src/services/subdev src/tools/linkkit_tsl_convert
AR := /home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/build/compiler/gcc-arm-none-eabi/Linux64/bin/arm-none-eabi-ar
CC := /home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/build/compiler/gcc-arm-none-eabi/Linux64/bin/arm-none-eabi-gcc
CFLAGS := -DALCS_ENABLED -DAPP_NAME=beken_test -DAWSS_BATCH_DEVAP_ENABLE -DAWSS_SUPPORT_APLIST -DAWSS_SUPPORT_DEV_AP -DAWSS_SUPPORT_SMARTCONFIG -DAWSS_SUPPORT_SMARTCONFIG_MCAST -DAWSS_SUPPORT_SMARTCONFIG_WPS -DAWSS_SUPPORT_STATIS -DAWSS_SUPPORT_ZEROCONFIG -DBUILD_AOS -DCOAP_SERV_MULTITHREAD -DCOMPILE_HOST=ming.liu -DCONFIG_AOS_CLI -DCONFIG_BLDTIME_MUTE_DBGLOG=1 -DCONFIG_SDK_THREAD_COST=1 -DCONFIG_YWSS -DDEVICE_MODEL_ENABLED -DDEV_BIND_ENABLED -DDEV_ERRCODE_ENABLE -DDEV_OFFLINE_LOG_ENABLE -DDEV_OFFLINE_OTA_ENABLE -DDEV_STATEMACHINE_ENABLE -DDM_UNIFIED_SERVICE_POST -DFORCE_SSL_VERIFY -DGIT_BRANCH=OSK_3.0.X -DGIT_HASH=1e0806be171bc2387323262849efea1e27d3a324 -DLOG_REPORT_TO_CLOUD -DLOG_SIMPLE -DMANUFACT_AP_FIND_ENABLE -DMQTT_AUTO_SUBSCRIBE -DMQTT_COMM_ENABLED -DONLINE -DOTA_ENABLED -DOTA_SIGNAL_CHANNEL=1 -DPLATFORM=bk7231udevkitc -DREGION_ENV_STRING=MAINLAND-ONLINE -DREGION_MAINLAND -DSDK_COMMIT_ID= -DSUPPORT_TLS -DSYSINFO_APP_VERSION=app-1.6.0-20230921.191759 -DSYSINFO_DEVICE_NAME=BK7231U -DSYSINFO_KERNEL_VERSION=AOS-R-1.3.4 -DSYSINFO_PRODUCT_MODEL=ALI_AOS_BK7231U -DWIFI_PROVISION_ENABLED -DWITH_MQTT_DYN_BUF=1 -DWITH_MQTT_SUB_SHORTCUT=1 -DWITH_MQTT_ZIP_TOPIC=1 -I/home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/framework/protocol/linkkit/sdk/iotx-sdk-c_clone/../../../../../include -I/home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/framework/protocol/linkkit/sdk/iotx-sdk-c_clone/../../../../activation -Iexamples -Iexamples/linkkit -Itests -Os -Wall -Werror -Wno-format -Wno-implicit-function-declaration -Wno-incompatible-pointer-types -Wno-unused -fdata-sections -ffunction-sections -march=armv5te -mcpu=arm968e-s -mlittle-endian -mthumb -mthumb-interwork
COMP_LIB := libiot_sdk.a
COMP_LIB_COMPONENTS := components/tick_notify components/timer_service src/infra/log src/infra/system src/infra/utils src/protocol/alcs src/protocol/coap/local src/protocol/mqtt src/sdk-impl src/services/awss src/services/dev_bind src/services/dev_diagnosis src/services/linkkit/cm src/services/linkkit/dev_reset src/services/linkkit/dm src/services/ota
CONFIG_VENDOR := rhino
CROSS_CANDIDATES := AR CC CXX LD OBJCOPY STRIP
CROSS_PREFIX := /home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/build/compiler/gcc-arm-none-eabi/Linux64/bin/arm-none-eabi-
CXX := /home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/build/compiler/gcc-arm-none-eabi/Linux64/bin/arm-none-eabi-g++
EXPORT_DIR := include
IMPORT_DIR := /home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/framework/protocol/linkkit/sdk/iotx-sdk-c_clone/prebuilt
INSTALL_DIR := /home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/framework/protocol/linkkit/sdk/iotx-sdk-c_clone/.O/usr
INSTALL_LIB_DIR := /home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/framework/protocol/linkkit/sdk/iotx-sdk-c_clone/.O/usr/lib
KERNEL_DIR := 
LD := /home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/build/compiler/gcc-arm-none-eabi/Linux64/bin/arm-none-eabi-ld
LDFLAGS := 
MAKE_ENV_VARS := 
NOEXEC_CMAKE_DIRS := src/services/linkkit/dm tests
OBJCOPY := /home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/build/compiler/gcc-arm-none-eabi/Linux64/bin/arm-none-eabi-objcopy
PACKAGE_DIR := /home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/framework/protocol/linkkit/sdk/iotx-sdk-c_clone/packages
RULE_DIR := /home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/framework/protocol/linkkit/sdk/iotx-sdk-c_clone/build-rules
STRIP := /home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/build/compiler/gcc-arm-none-eabi/Linux64/bin/arm-none-eabi-strip
SYSROOT_INC := /home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/framework/protocol/linkkit/sdk/iotx-sdk-c_clone/.O/usr/include
TOP_DIR := /home/ming.liu/ci/workspace/sdk3.0_Verify/smartliving-1.6.0-bk7231u-master/Living_SDK/framework/protocol/linkkit/sdk/iotx-sdk-c_clone
WIN32_CMAKE_SKIP := coap-example linkkit_tsl_convert
COMP_LIB_FILES :=  libiot_utils.a  libiot_log.a  libiot_system.a  libsdk_impl.a  libiot_dev_diagnosis.a  libiot_timer_service.a  libiot_tick_notify.a  libiot_mqtt.a  libiot_ota.a  libiot_cm.a  libiot_dm.a  libiot_reset.a  libiot_coap_local.a  libiot_awss.a  libiot_bind.a  libiot_alcs.a

include $(RULE_DIR)/settings.mk
include $(CONFIG_TPL)

all:

DEPENDS             := src/ref-impl/hal
DEPENDS             += src/ref-impl/tls

HDR_REFS            += src/infra
HDR_REFS            += src/services
HDR_REFS            += linkkit/gateway
HDR_REFS            += linkkit/certification
HDR_REFS            += linkkit/living_platform
HDR_REFS            += linkkit/living_platform_rawdata

LDFLAGS             := -Bstatic
LDFLAGS             += -liot_sdk

LDFLAGS             += -liot_hal
CFLAGS              := $(filter-out -ansi,$(CFLAGS))
ifneq (,$(filter -D_PLATFORM_IS_WINDOWS_,$(CFLAGS)))
LDFLAGS             += -lws2_32
CFLAGS              := $(filter-out -DCOAP_COMM_ENABLED,$(CFLAGS))
endif
ifneq (,$(filter -DSUPPORT_ITLS,$(CFLAGS)))
LDFLAGS             += -litls
else
LDFLAGS             += -liot_tls
endif

ifneq (,$(filter -D_PLATFORM_IS_LINUX_, $(CFLAGS)))
LDFLAGS += -L$(TOP_DIR)/lib/linux
LDFLAGS += -lawss_security
endif

SRCS_gateway                    := cJSON.c linkkit/gateway/gateway_entry.c \
                                    linkkit/gateway/gateway_main.c \
                                    linkkit/gateway/gateway_api.c \
                                    linkkit/gateway/gateway_ut.c
                      
SRCS_certification              := cJSON.c linkkit/certification/ct_entry.c \
                                    linkkit/certification/ct_main.c \
                                    linkkit/certification/ct_ut.c \
                                    linkkit/certification/ct_ota.c

SRCS_living_platform            := cJSON.c linkkit/living_platform/app_entry.c \
                                    linkkit/living_platform/living_platform_main.c \
                                    linkkit/living_platform/living_platform_ut.c

SRCS_living_platform_rawdata    := cJSON.c linkkit/living_platform_rawdata/app_entry.c \
                                    linkkit/living_platform_rawdata/living_platform_rawdata_main.c \
                                    linkkit/living_platform_rawdata/living_platform_rawdata_ut.c

# Syntax of Append_Conditional
# ---
#
# $(call Append_Conditional, TARGET, \  <-- Operated Variable
#   member1 member2 ...            , \  <-- Appended Members
#   switch1 switch2 ...            , \  <-- All These Switches are Defined
#   switch3 switch4 ...)                <-- All These Switches are Not Defined (Optional)

$(call Append_Conditional, LDFLAGS, \
    -litls \
    -lid2client \
    -lkm \
    -lplat_gen \
    -lalicrypto \
    -lmbedcrypto \
, \
SUPPORT_ITLS, \
SUPPORT_TLS)

$(call Append_Conditional, TARGET, gateway,             DEVICE_MODEL_ENABLED  DEVICE_MODEL_GATEWAY)
$(call Append_Conditional, TARGET, certification,       DEVICE_MODEL_ENABLED)
$(call Append_Conditional, TARGET, living_platform,     DEVICE_MODEL_ENABLED, DEVICE_MODEL_RAWDATA_SOLO)
$(call Append_Conditional, TARGET, living_platform_rawdata,     DEVICE_MODEL_ENABLED DEVICE_MODEL_RAWDATA_SOLO)

# Clear All Above when Build for Windows
#
ifneq (,$(filter -D_PLATFORM_IS_WINDOWS_,$(CFLAGS)))
    TARGET := living_platform
endif

env:
	@echo ""
	@printf -- "-----------------------------------------------------------------\n"
	@$(foreach var,$(SHOW_ENV_VARS),$(call Dump_Var,$(var)))
	@printf -- "-----------------------------------------------------------------\n"
	@echo ""

include $(RULE_DIR)/rules.mk
